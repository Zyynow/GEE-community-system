<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
成功的让mybatis将mapper接口和mapper.xml绑定起来:
    mapper接口的全限定名，要和mapper.xml的namespace属性一致
    mapper接口中的方法名要和mapper.xml中的SQL标签的id一致
    mapper接口中的方法入参类型，要和mapper.xml中SQL语句的入参类型一致
    mapper接口中的方法出参类型，要和mapper.xml中SQL语句的返回值类型一致
-->
<mapper namespace="com.jxufe.dao.UserMapper">

    <select id="findByUsernameAndPassword" resultType="com.jxufe.entity.User">
        select *
        from t_user
        where username = #{username}
          and password = #{password}
    </select>

    <insert id="saveUser" parameterType="com.jxufe.entity.User">
        insert into t_user(username, password, nickname, email, sex, create_time, avatar, blog_num)
        values (#{username}, #{password}, #{nickname}, #{email}, #{sex}, #{createTime}, #{avatar}, #{blogNum});
    </insert>

    <select id="findByUsername" resultType="com.jxufe.entity.User">
        select *
        from t_user
        where username = #{username}
    </select>

    <update id="updateUserInfo" parameterType="com.jxufe.entity.User">
        update t_user
        set nickname        = #{nickname},
            email           = #{email},
            sex             = #{sex},
            dream_college   = #{dreamCollege},
            avatar          = #{avatar},
            description     = #{description},
            signature       = #{signature},
            academic        = #{academic},
            school          = #{school},
            enrollment_time = #{enrollmentTime},
            filed           = #{filed},
            address         = #{address},
            update_time     = #{updateTime}
        where id = #{id}
    </update>

    <insert id="addFeedback" parameterType="com.jxufe.entity.Feedback">
        insert into t_feedback(title, content, create_time)
        values (#{title}, #{content}, #{createTime})
    </insert>

    <update id="checkAndUpdatePassword">
        update t_user
        set password = #{newPassword}
        where password = #{oldPassword}
          and username = #{username}
    </update>

    <select id="findUserById" resultType="com.jxufe.entity.User" parameterType="java.lang.Long">
        select *
        from t_user
        where id = #{id}
    </select>

    <select id="checkPassword" resultType="com.jxufe.entity.User">
        select *
        from t_user
        where username = #{username}
          and password = #{oldPwd}
    </select>

    <update id="updateBlogNum">
        update t_user
        set blog_num = blog_num + 1
        where id = #{id}
    </update>

    <resultMap id="ResultSearchVO" type="com.jxufe.vo.SearchVO">
        <result property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="avatar" column="avatar"/>
        <result property="nickname" column="nickname"/>
        <result property="signature" column="signature"/>
        <result property="isFriend" column="is_friend"/>
        <result property="isMe" column="is_me"/>
    </resultMap>

    <select id="searchUser" resultMap="ResultSearchVO" resultType="com.jxufe.vo.SearchVO">
        SELECT DISTINCT u.id    AS user_id,
                        u.username,
                        u.avatar,
                        u.nickname,
                        u.signature,
                        CASE

                            WHEN u.id IN (f.user1id, f.user2id) THEN
                                1
                            ELSE 0
                            END AS is_friend,
                        CASE

                            WHEN u.id = #{meId} THEN
                                1
                            ELSE 0
                            END AS is_me

        FROM t_user AS u
                 LEFT JOIN (SELECT DISTINCT user1id,
                                            user2id
                            FROM t_friend
                            WHERE user1id IN (SELECT id FROM t_user WHERE username LIKE "%" #{name} "%"
                               OR nickname LIKE "%" #{name} "%") OR user2id IN
                                  (SELECT id FROM t_user WHERE username LIKE "%" #{name} "%" OR nickname LIKE "%" #{name} "%")) AS f
        ON u.id IN (f.user1id, f.user2id)
        WHERE u.username LIKE "%" #{name} "%"
           OR u.nickname LIKE "%" #{name} "%"
    </select>

    <insert id="addAboutView">
        insert into t_view(viewer_id, viewed_id, count)
        values (#{viewerId}, #{viewedId}, 1)
    </insert>

    <update id="updateAboutView">
        update t_view
        set count = count + 1
        where viewer_id = #{viewerId}
          and viewed_id = #{viewedId}
    </update>

    <select id="findView" resultType="com.jxufe.entity.View">
        select *
        from t_view
        where viewer_id = #{viewerId}
          and viewed_id = #{viewedId}
    </select>

</mapper>